clc
clear all
close all
opts.output = 'imdb.mat' ;
opts.wnids = 'wnids200.txt' ;
opts.num_classes = 200;
opts.resize = true;
opts.normalize = true ;

% Taken from generate_CIFAR
opts.contrastNormalization = true ;
opts.whitenData = true ;
generate_TINY_IMAGENET(opts);
datadir = 'F:\matlab_allcodes_delete\matlab\bin\projectdeep\codes\codes\cifar100_run\Run_tinyimagenet_200\90_degrees'; 
[XTrain1,YTrain1,XValidation1,YValidation1] = loadCIFAR10Data(datadir);
[XTrain, YTrain] = supervised(XTrain1);
[XValidation,YValidation] = supervised(XValidation1);
YTrain= categorical(YTrain);
YValidation= categorical(YValidation);
imageSize = [32 32 3];
pixelRange = [-4 4];
imageAugmenter = imageDataAugmenter( ...
    'RandXReflection',true, ...
    'RandXTranslation',pixelRange, ...
    'RandYTranslation',pixelRange);
augimdsTrain = augmentedImageDatastore(imageSize,XTrain,YTrain);
   % 'DataAugmentation',imageAugmenter);
numUnits = 9;
netWidth = 16;
lgraph = residualCIFARlgraph(netWidth,numUnits,"standard");
miniBatchSize = 128;
learnRate = 0.1*miniBatchSize/128;
valFrequency = floor(size(XTrain,4)/miniBatchSize);
options = trainingOptions('sgdm', ...
    'InitialLearnRate',learnRate, ...
    'MaxEpochs',70, ...
    'MiniBatchSize',miniBatchSize, ...
    'VerboseFrequency',valFrequency, ...
    'Shuffle','every-epoch', ...
    'Plots','training-progress', ...
    'Verbose',false, ...
    'ValidationData',{XValidation,YValidation}, ...
    'ValidationFrequency',valFrequency, ...
    'LearnRateSchedule','piecewise', ...
    'LearnRateDropFactor',0.1, ...
    'LearnRateDropPeriod',60);
[trainedNet,info] = trainNetwork(augimdsTrain,lgraph,options);
